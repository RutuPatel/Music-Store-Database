-- MySQL Script generated by MySQL Workbench
-- Tue Dec 11 16:48:01 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema MusicStore
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema MusicStore
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `MusicStore` DEFAULT CHARACTER SET utf8 ;
USE `MusicStore` ;

-- -----------------------------------------------------
-- Table `MusicStore`.`Depatments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MusicStore`.`Depatments` (
  `department_Id` INT NOT NULL AUTO_INCREMENT,
  `Department_Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`department_Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicStore`.`Employees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MusicStore`.`Employees` (
  `employee_Id` INT NOT NULL AUTO_INCREMENT,
  `Emp_Fname` VARCHAR(45) NOT NULL,
  `Emp_Lname` VARCHAR(45) NULL,
  `Emp_Email` VARCHAR(45) NOT NULL,
  `Emp_Phone` VARCHAR(20) NOT NULL,
  `Depatments_department_Id` INT NOT NULL,
  PRIMARY KEY (`employee_Id`),
  INDEX `fk_Employees_Depatments1_idx` (`Depatments_department_Id` ASC),
  UNIQUE INDEX `Emp_Email_UNIQUE` (`Emp_Email` ASC),
  CONSTRAINT `fk_Employees_Depatments1`
    FOREIGN KEY (`Depatments_department_Id`)
    REFERENCES `MusicStore`.`Depatments` (`department_Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicStore`.`Customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MusicStore`.`Customers` (
  `Customer_Fname` VARCHAR(45) NOT NULL,
  `Customer_Lname` VARCHAR(45) NULL,
  `Customer_Email` VARCHAR(45) NOT NULL,
  `Customer_Phone` VARCHAR(20) NOT NULL,
  UNIQUE INDEX `Customer_Email_UNIQUE` (`Customer_Email` ASC),
  PRIMARY KEY (`Customer_Phone`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicStore`.`Addresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MusicStore`.`Addresses` (
  `Address_Id` INT NOT NULL AUTO_INCREMENT,
  `Street_Address` VARCHAR(100) NOT NULL,
  `Unit` INT NULL,
  `City` VARCHAR(45) NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  `ZipCode` VARCHAR(45) NOT NULL,
  `Country` VARCHAR(45) NOT NULL,
  `Customers_Customer_Phone` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`Address_Id`),
  INDEX `fk_Addresses_Customers1_idx` (`Customers_Customer_Phone` ASC),
  CONSTRAINT `fk_Addresses_Customers1`
    FOREIGN KEY (`Customers_Customer_Phone`)
    REFERENCES `MusicStore`.`Customers` (`Customer_Phone`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicStore`.`Categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MusicStore`.`Categories` (
  `Category_Id` INT NOT NULL AUTO_INCREMENT,
  `Category_Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Category_Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicStore`.`Artists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MusicStore`.`Artists` (
  `Artist_Id` INT NOT NULL AUTO_INCREMENT,
  `Artist_Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Artist_Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicStore`.`albums`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MusicStore`.`albums` (
  `album_Id` INT NOT NULL AUTO_INCREMENT,
  `album_Name` VARCHAR(45) NOT NULL,
  `Unit_Price` FLOAT NOT NULL,
  `Categories_Category_Id` INT NOT NULL,
  `Artists_Artist_Id` INT NOT NULL,
  PRIMARY KEY (`album_Id`),
  INDEX `fk_Products_Categories1_idx` (`Categories_Category_Id` ASC),
  INDEX `fk_albums_Artists1_idx` (`Artists_Artist_Id` ASC),
  CONSTRAINT `fk_Products_Categories1`
    FOREIGN KEY (`Categories_Category_Id`)
    REFERENCES `MusicStore`.`Categories` (`Category_Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_albums_Artists1`
    FOREIGN KEY (`Artists_Artist_Id`)
    REFERENCES `MusicStore`.`Artists` (`Artist_Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicStore`.`Sales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MusicStore`.`Sales` (
  `Sale_Id` INT NOT NULL AUTO_INCREMENT,
  `Employees_employee_Id` INT NULL,
  `Total_qty` INT NOT NULL,
  `Customers_Customer_Phone` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`Sale_Id`),
  INDEX `fk_Sales_Employees1_idx` (`Employees_employee_Id` ASC),
  INDEX `fk_Sales_Customers1_idx` (`Customers_Customer_Phone` ASC),
  CONSTRAINT `fk_Sales_Employees1`
    FOREIGN KEY (`Employees_employee_Id`)
    REFERENCES `MusicStore`.`Employees` (`employee_Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Sales_Customers1`
    FOREIGN KEY (`Customers_Customer_Phone`)
    REFERENCES `MusicStore`.`Customers` (`Customer_Phone`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicStore`.`SalesDetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MusicStore`.`SalesDetails` (
  `Salesdetails_Id` INT NOT NULL,
  `sales_date` DATE NOT NULL,
  `Sales_qty` INT NOT NULL,
  `Unit_price` FLOAT NOT NULL,
  `Groce_amount` FLOAT NOT NULL,
  `discount` FLOAT NOT NULL,
  `Net_amount` FLOAT NOT NULL,
  `Sales_Sale_Id` INT NOT NULL,
  `album_Name` VARCHAR(45) NOT NULL,
  `albums_album_Id` INT NOT NULL,
  PRIMARY KEY (`Salesdetails_Id`),
  INDEX `fk_SalesDetails_Sales1_idx` (`Sales_Sale_Id` ASC),
  INDEX `fk_SalesDetails_albums1_idx` (`albums_album_Id` ASC),
  CONSTRAINT `fk_SalesDetails_Sales1`
    FOREIGN KEY (`Sales_Sale_Id`)
    REFERENCES `MusicStore`.`Sales` (`Sale_Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_SalesDetails_albums1`
    FOREIGN KEY (`albums_album_Id`)
    REFERENCES `MusicStore`.`albums` (`album_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
ROW_FORMAT = DEFAULT;


-- -----------------------------------------------------
-- Table `MusicStore`.`Returns`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MusicStore`.`Returns` (
  `Return_Id` INT NOT NULL,
  `Sales_Sale_Id` INT NOT NULL,
  `Reason` VARCHAR(100) NULL,
  `Total_qty_returned` INT NOT NULL,
  `Employees_employee_Id` INT NOT NULL,
  `Customers_Customer_Phone` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`Return_Id`),
  INDEX `fk_Returns_Sales1_idx` (`Sales_Sale_Id` ASC),
  INDEX `fk_Returns_Employees1_idx` (`Employees_employee_Id` ASC),
  INDEX `fk_Returns_Customers1_idx` (`Customers_Customer_Phone` ASC),
  CONSTRAINT `fk_Returns_Sales1`
    FOREIGN KEY (`Sales_Sale_Id`)
    REFERENCES `MusicStore`.`Sales` (`Sale_Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Returns_Employees1`
    FOREIGN KEY (`Employees_employee_Id`)
    REFERENCES `MusicStore`.`Employees` (`employee_Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Returns_Customers1`
    FOREIGN KEY (`Customers_Customer_Phone`)
    REFERENCES `MusicStore`.`Customers` (`Customer_Phone`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicStore`.`Returndetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MusicStore`.`Returndetails` (
  `Returndetail_Id` INT NOT NULL AUTO_INCREMENT,
  `Return_Date` DATE NOT NULL,
  `Return_Qty` INT NOT NULL,
  `Unit_Price` FLOAT NOT NULL,
  `Discount_Offered` FLOAT NOT NULL,
  `Item_amount` FLOAT NOT NULL,
  `Return_AlbumName` VARCHAR(45) NOT NULL,
  `Returns_Return_Id` INT NOT NULL,
  `SalesDetails_Salesdetails_Id` INT NOT NULL,
  `albums_album_Id` INT NOT NULL,
  PRIMARY KEY (`Returndetail_Id`),
  INDEX `fk_Returndetails_Returns1_idx` (`Returns_Return_Id` ASC),
  INDEX `fk_Returndetails_SalesDetails1_idx` (`SalesDetails_Salesdetails_Id` ASC),
  INDEX `fk_Returndetails_albums1_idx` (`albums_album_Id` ASC),
  CONSTRAINT `fk_Returndetails_Returns1`
    FOREIGN KEY (`Returns_Return_Id`)
    REFERENCES `MusicStore`.`Returns` (`Return_Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Returndetails_SalesDetails1`
    FOREIGN KEY (`SalesDetails_Salesdetails_Id`)
    REFERENCES `MusicStore`.`SalesDetails` (`Salesdetails_Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Returndetails_albums1`
    FOREIGN KEY (`albums_album_Id`)
    REFERENCES `MusicStore`.`albums` (`album_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicStore`.`Tracks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MusicStore`.`Tracks` (
  `Track_Id` INT NOT NULL,
  `Track_name` VARCHAR(45) NOT NULL,
  `albums_album_Id` INT NOT NULL,
  `Artists_Artist_Id` INT NOT NULL,
  PRIMARY KEY (`Track_Id`),
  INDEX `fk_Tracks_albums1_idx` (`albums_album_Id` ASC),
  INDEX `fk_Tracks_Artists1_idx` (`Artists_Artist_Id` ASC),
  CONSTRAINT `fk_Tracks_albums1`
    FOREIGN KEY (`albums_album_Id`)
    REFERENCES `MusicStore`.`albums` (`album_Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Tracks_Artists1`
    FOREIGN KEY (`Artists_Artist_Id`)
    REFERENCES `MusicStore`.`Artists` (`Artist_Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicStore`.`Stocks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MusicStore`.`Stocks` (
  `Stock_Id` INT NOT NULL AUTO_INCREMENT,
  `Total_items` INT NOT NULL,
  `Last_updated` DATE NOT NULL,
  `albums_album_Id` INT NOT NULL,
  `Items_sold` INT NULL DEFAULT 0,
  `Items_Returned` INT NULL DEFAULT 0,
  `Total_Items_sold` INT NULL DEFAULT 0,
  PRIMARY KEY (`Stock_Id`),
  INDEX `fk_Stocks_albums1_idx` (`albums_album_Id` ASC),
  CONSTRAINT `fk_Stocks_albums1`
    FOREIGN KEY (`albums_album_Id`)
    REFERENCES `MusicStore`.`albums` (`album_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `MusicStore`.`Depatments`
-- -----------------------------------------------------
START TRANSACTION;
USE `MusicStore`;
INSERT INTO `MusicStore`.`Depatments` (`department_Id`, `Department_Name`) VALUES (1, 'Sales');
INSERT INTO `MusicStore`.`Depatments` (`department_Id`, `Department_Name`) VALUES (2, 'Returns');

COMMIT;


-- -----------------------------------------------------
-- Data for table `MusicStore`.`Employees`
-- -----------------------------------------------------
START TRANSACTION;
USE `MusicStore`;
INSERT INTO `MusicStore`.`Employees` (`employee_Id`, `Emp_Fname`, `Emp_Lname`, `Emp_Email`, `Emp_Phone`, `Depatments_department_Id`) VALUES (1, 'Rutu', 'Patel', 'patelrutu1203@gmail.com', '2268996424', 1);
INSERT INTO `MusicStore`.`Employees` (`employee_Id`, `Emp_Fname`, `Emp_Lname`, `Emp_Email`, `Emp_Phone`, `Depatments_department_Id`) VALUES (2, 'Avi', 'Kaur', 'avikaur1993@gmail.com', '5198997856', 2);
INSERT INTO `MusicStore`.`Employees` (`employee_Id`, `Emp_Fname`, `Emp_Lname`, `Emp_Email`, `Emp_Phone`, `Depatments_department_Id`) VALUES (3, 'Avikash', 'Singh', 'avikash@gmail.com', '2268795424', 1);
INSERT INTO `MusicStore`.`Employees` (`employee_Id`, `Emp_Fname`, `Emp_Lname`, `Emp_Email`, `Emp_Phone`, `Depatments_department_Id`) VALUES (4, 'Ramandeep', 'Gill', 'Ramandeep@gmail.com', '2268457896', 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `MusicStore`.`Customers`
-- -----------------------------------------------------
START TRANSACTION;
USE `MusicStore`;
INSERT INTO `MusicStore`.`Customers` (`Customer_Fname`, `Customer_Lname`, `Customer_Email`, `Customer_Phone`) VALUES ('Parth', 'Patel', 'parthpatel@gmail.com', '2268991234');
INSERT INTO `MusicStore`.`Customers` (`Customer_Fname`, `Customer_Lname`, `Customer_Email`, `Customer_Phone`) VALUES ('jay', 'patel', 'jaypatel@gmail.com', '2268991235');
INSERT INTO `MusicStore`.`Customers` (`Customer_Fname`, `Customer_Lname`, `Customer_Email`, `Customer_Phone`) VALUES ('samarth', 'patel', 'samarth10@gmail.com', '2268991236');

COMMIT;


-- -----------------------------------------------------
-- Data for table `MusicStore`.`Addresses`
-- -----------------------------------------------------
START TRANSACTION;
USE `MusicStore`;
INSERT INTO `MusicStore`.`Addresses` (`Address_Id`, `Street_Address`, `Unit`, `City`, `State`, `ZipCode`, `Country`, `Customers_Customer_Phone`) VALUES (1, '49 vanier dr', 402, 'Kitchener', 'ON', 'N2C2H8', 'Canada', '2268991234');
INSERT INTO `MusicStore`.`Addresses` (`Address_Id`, `Street_Address`, `Unit`, `City`, `State`, `ZipCode`, `Country`, `Customers_Customer_Phone`) VALUES (2, '425 Wilson avenue', 728, 'Kitchener', 'ON', 'N2C2H8', 'Canada', '2268991235');
INSERT INTO `MusicStore`.`Addresses` (`Address_Id`, `Street_Address`, `Unit`, `City`, `State`, `ZipCode`, `Country`, `Customers_Customer_Phone`) VALUES (3, '785 Hamon Dr', 85, 'Kitchener', 'On', 'N3G3J6', 'Canada', '2268991236');

COMMIT;


-- -----------------------------------------------------
-- Data for table `MusicStore`.`Categories`
-- -----------------------------------------------------
START TRANSACTION;
USE `MusicStore`;
INSERT INTO `MusicStore`.`Categories` (`Category_Id`, `Category_Name`) VALUES (1, 'Rock');
INSERT INTO `MusicStore`.`Categories` (`Category_Id`, `Category_Name`) VALUES (2, 'Pop');
INSERT INTO `MusicStore`.`Categories` (`Category_Id`, `Category_Name`) VALUES (3, 'Country');
INSERT INTO `MusicStore`.`Categories` (`Category_Id`, `Category_Name`) VALUES (4, 'Hip-Hop');

COMMIT;


-- -----------------------------------------------------
-- Data for table `MusicStore`.`Artists`
-- -----------------------------------------------------
START TRANSACTION;
USE `MusicStore`;
INSERT INTO `MusicStore`.`Artists` (`Artist_Id`, `Artist_Name`) VALUES (1, 'Atif Aslam');
INSERT INTO `MusicStore`.`Artists` (`Artist_Id`, `Artist_Name`) VALUES (2, 'David Gutte');
INSERT INTO `MusicStore`.`Artists` (`Artist_Id`, `Artist_Name`) VALUES (3, 'Sonu Nigam');
INSERT INTO `MusicStore`.`Artists` (`Artist_Id`, `Artist_Name`) VALUES (4, 'Linkiin park');

COMMIT;


-- -----------------------------------------------------
-- Data for table `MusicStore`.`albums`
-- -----------------------------------------------------
START TRANSACTION;
USE `MusicStore`;
INSERT INTO `MusicStore`.`albums` (`album_Id`, `album_Name`, `Unit_Price`, `Categories_Category_Id`, `Artists_Artist_Id`) VALUES (1, 'Doorie', 50, 2, 1);
INSERT INTO `MusicStore`.`albums` (`album_Id`, `album_Name`, `Unit_Price`, `Categories_Category_Id`, `Artists_Artist_Id`) VALUES (2, 'Race3', 79, 1, 1);
INSERT INTO `MusicStore`.`albums` (`album_Id`, `album_Name`, `Unit_Price`, `Categories_Category_Id`, `Artists_Artist_Id`) VALUES (3, 'Jane-e-Maan', 40, 3, 3);
INSERT INTO `MusicStore`.`albums` (`album_Id`, `album_Name`, `Unit_Price`, `Categories_Category_Id`, `Artists_Artist_Id`) VALUES (4, 'Qayamat', 96, 4, 3);
INSERT INTO `MusicStore`.`albums` (`album_Id`, `album_Name`, `Unit_Price`, `Categories_Category_Id`, `Artists_Artist_Id`) VALUES (5, 'One Love', 199, 1, 2);
INSERT INTO `MusicStore`.`albums` (`album_Id`, `album_Name`, `Unit_Price`, `Categories_Category_Id`, `Artists_Artist_Id`) VALUES (6, 'Listen', 99, 4, 2);
INSERT INTO `MusicStore`.`albums` (`album_Id`, `album_Name`, `Unit_Price`, `Categories_Category_Id`, `Artists_Artist_Id`) VALUES (7, 'Living Things', 89, 2, 4);
INSERT INTO `MusicStore`.`albums` (`album_Id`, `album_Name`, `Unit_Price`, `Categories_Category_Id`, `Artists_Artist_Id`) VALUES (8, 'a Thousand suns', 45, 3, 4);

COMMIT;


-- -----------------------------------------------------
-- Data for table `MusicStore`.`Sales`
-- -----------------------------------------------------
START TRANSACTION;
USE `MusicStore`;
INSERT INTO `MusicStore`.`Sales` (`Sale_Id`, `Employees_employee_Id`, `Total_qty`, `Customers_Customer_Phone`) VALUES (1, 1, 2, '2268991234');
INSERT INTO `MusicStore`.`Sales` (`Sale_Id`, `Employees_employee_Id`, `Total_qty`, `Customers_Customer_Phone`) VALUES (2, 1, 1, '2268991235');
INSERT INTO `MusicStore`.`Sales` (`Sale_Id`, `Employees_employee_Id`, `Total_qty`, `Customers_Customer_Phone`) VALUES (3, 3, 2, '2268991236');

COMMIT;


-- -----------------------------------------------------
-- Data for table `MusicStore`.`SalesDetails`
-- -----------------------------------------------------
START TRANSACTION;
USE `MusicStore`;
INSERT INTO `MusicStore`.`SalesDetails` (`Salesdetails_Id`, `sales_date`, `Sales_qty`, `Unit_price`, `Groce_amount`, `discount`, `Net_amount`, `Sales_Sale_Id`, `album_Name`, `albums_album_Id`) VALUES (1, '2018-11-09', 3, 50, 100, 10, 90, 1, 'Dooriee', 1);
INSERT INTO `MusicStore`.`SalesDetails` (`Salesdetails_Id`, `sales_date`, `Sales_qty`, `Unit_price`, `Groce_amount`, `discount`, `Net_amount`, `Sales_Sale_Id`, `album_Name`, `albums_album_Id`) VALUES (2, '2018-11-08', 4, 96, 96, 0, 96, 2, 'Qayamat', 4);
INSERT INTO `MusicStore`.`SalesDetails` (`Salesdetails_Id`, `sales_date`, `Sales_qty`, `Unit_price`, `Groce_amount`, `discount`, `Net_amount`, `Sales_Sale_Id`, `album_Name`, `albums_album_Id`) VALUES (3, '2018-11-14', 1, 45, 45, 10, 41.5, 3, 'a Thousand Sun', 8);
INSERT INTO `MusicStore`.`SalesDetails` (`Salesdetails_Id`, `sales_date`, `Sales_qty`, `Unit_price`, `Groce_amount`, `discount`, `Net_amount`, `Sales_Sale_Id`, `album_Name`, `albums_album_Id`) VALUES (4, '2018-11-28', 1, 40, 40, 50, 20, 3, 'Jane-e-Maan', 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `MusicStore`.`Returns`
-- -----------------------------------------------------
START TRANSACTION;
USE `MusicStore`;
INSERT INTO `MusicStore`.`Returns` (`Return_Id`, `Sales_Sale_Id`, `Reason`, `Total_qty_returned`, `Employees_employee_Id`, `Customers_Customer_Phone`) VALUES (1, 1, 'Dont like album', 1, 2, '2268991234');

COMMIT;


-- -----------------------------------------------------
-- Data for table `MusicStore`.`Returndetails`
-- -----------------------------------------------------
START TRANSACTION;
USE `MusicStore`;
INSERT INTO `MusicStore`.`Returndetails` (`Returndetail_Id`, `Return_Date`, `Return_Qty`, `Unit_Price`, `Discount_Offered`, `Item_amount`, `Return_AlbumName`, `Returns_Return_Id`, `SalesDetails_Salesdetails_Id`, `albums_album_Id`) VALUES (1, '2018-12-01', 1, 50, 10, 45, 'Dooriee', 1, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `MusicStore`.`Tracks`
-- -----------------------------------------------------
START TRANSACTION;
USE `MusicStore`;
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (1, 'Doorie', 1, 1);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (2, 'Ehsaas', 1, 1);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (3, 'one Love', 5, 2);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (4, 'Selfish', 2, 1);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (5, 'Allah Duhai hai', 2, 1);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (6, 'Heeriye', 2, 1);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (7, 'Listen', 6, 2);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (8, 'Hum ko malloum hai', 3, 3);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (9, 'Ajnabi Sher', 3, 3);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (10, 'jane ke jane na ', 3, 3);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (11, 'Dil Chura liya', 4, 3);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (12, 'Aitbaar nahi karna', 4, 3);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (13, 'Numb', 7, 4);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (14, 'In the end', 7, 4);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (15, 'Crawling', 7, 4);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (16, 'Burning in the Sky', 8, 4);
INSERT INTO `MusicStore`.`Tracks` (`Track_Id`, `Track_name`, `albums_album_Id`, `Artists_Artist_Id`) VALUES (17, 'Fallout', 8, 4);

COMMIT;


-- -----------------------------------------------------
-- Data for table `MusicStore`.`Stocks`
-- -----------------------------------------------------
START TRANSACTION;
USE `MusicStore`;
INSERT INTO `MusicStore`.`Stocks` (`Stock_Id`, `Total_items`, `Last_updated`, `albums_album_Id`, `Items_sold`, `Items_Returned`, `Total_Items_sold`) VALUES (1, 2, '2018-08-25', 1, 3, 1, 2);
INSERT INTO `MusicStore`.`Stocks` (`Stock_Id`, `Total_items`, `Last_updated`, `albums_album_Id`, `Items_sold`, `Items_Returned`, `Total_Items_sold`) VALUES (2, 4, '2018-06-18', 2, NULL, NULL, NULL);
INSERT INTO `MusicStore`.`Stocks` (`Stock_Id`, `Total_items`, `Last_updated`, `albums_album_Id`, `Items_sold`, `Items_Returned`, `Total_Items_sold`) VALUES (3, 3, '2018-05-29', 3, 1, NULL, 1);
INSERT INTO `MusicStore`.`Stocks` (`Stock_Id`, `Total_items`, `Last_updated`, `albums_album_Id`, `Items_sold`, `Items_Returned`, `Total_Items_sold`) VALUES (4, 1, '2018-11-15', 4, 1, NULL, 1);
INSERT INTO `MusicStore`.`Stocks` (`Stock_Id`, `Total_items`, `Last_updated`, `albums_album_Id`, `Items_sold`, `Items_Returned`, `Total_Items_sold`) VALUES (5, 2, '2018-10-16', 5, NULL, NULL, NULL);
INSERT INTO `MusicStore`.`Stocks` (`Stock_Id`, `Total_items`, `Last_updated`, `albums_album_Id`, `Items_sold`, `Items_Returned`, `Total_Items_sold`) VALUES (6, 8, '2018-07-25', 6, NULL, NULL, NULL);
INSERT INTO `MusicStore`.`Stocks` (`Stock_Id`, `Total_items`, `Last_updated`, `albums_album_Id`, `Items_sold`, `Items_Returned`, `Total_Items_sold`) VALUES (7, 6, '2018-09-08', 7, NULL, NULL, NULL);
INSERT INTO `MusicStore`.`Stocks` (`Stock_Id`, `Total_items`, `Last_updated`, `albums_album_Id`, `Items_sold`, `Items_Returned`, `Total_Items_sold`) VALUES (8, 4, '2018-11-07', 8, 1, NULL, 1);

COMMIT;

